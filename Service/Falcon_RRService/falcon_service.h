//This file is automatically generated. DO NOT EDIT!

#include <RobotRaconteur.h>
#include <boost/signals2.hpp>
#pragma once

namespace falcon_service
{

class ControllerInput;
class Falcon;

class ControllerInput : public RobotRaconteur::RRStructure {
public:
int32_t positionX;
int32_t positionY;
int32_t positionZ;
int32_t center_button;
int32_t left_button;
int32_t right_button;
int32_t top_button;

virtual std::string RRType() {return "falcon_service.ControllerInput";  }
};

class Falcon : public virtual RobotRaconteur::RRObject
{
public:
virtual RR_SHARED_PTR<RobotRaconteur::RRArray<double > > get_position()=0;
virtual void set_position(RR_SHARED_PTR<RobotRaconteur::RRArray<double > > value)=0;

virtual int32_t get_button_status()=0;
virtual void set_button_status(int32_t value)=0;

virtual RR_SHARED_PTR<ControllerInput > get_controller_input()=0;
virtual void set_controller_input(RR_SHARED_PTR<ControllerInput > value)=0;

virtual int32_t get_deadzone_enabled()=0;
virtual void set_deadzone_enabled(int32_t value)=0;

virtual int32_t get_deadzone_feedback_enabled()=0;
virtual void set_deadzone_feedback_enabled(int32_t value)=0;

virtual int32_t get_deadzone_size()=0;
virtual void set_deadzone_size(int32_t value)=0;

virtual void setForce(RR_SHARED_PTR<RobotRaconteur::RRArray<double > > force)=0;

virtual std::string RRType() {return "falcon_service.Falcon";  }
};

}

